/** @file

  Platform Configuration C Struct Header File.

  Copyright (c) 2024, Intel Corporation. All rights reserved.<BR>
  SPDX-License-Identifier: BSD-2-Clause-Patent

  This file is automatically generated. Please do NOT modify !!!

**/

#ifndef __CONFIG_DATA_STRUCT_H__
#define __CONFIG_DATA_STRUCT_H__

#define PLATFORM_ADLN        1
#pragma pack(1)



#define    CDATA_MEMORY_TAG               0x180
#define    CDATA_SILICON_TAG              0x200
#define    CDATA_FUSA_TAG                 0x210
#define    CDATA_GRAPHICS_TAG             0x300
#define    CDATA_FEATURES_TAG             0x310
#define    CDATA_TCC_TAG                  0x320
#define    CDATA_GPIO_TAG                 0x400
#define    CDATA_DYNAMIC_TAG              0x600
#define    CDATA_POWER_TAG                0x610
#define    CDATA_PSD_TAG                  0x800
#define    CDATA_MEM_SPD0_TAG             0x8F0
#define    CDATA_MEM_SPD1_TAG             0x8F1
#define    CDATA_MEM_SPD2_TAG             0x8F2
#define    CDATA_MEM_SPD3_TAG             0x8F3
#define    CDATA_MEM_SPD4_TAG             0x8F4
#define    CDATA_MEM_SPD5_TAG             0x8F5
#define    CDATA_MEM_SPD6_TAG             0x8F6
#define    CDATA_MEM_SPD7_TAG             0x8F7
#define    CDATA_PEP_TAG                  0x900



typedef struct {
  
  /* ACPI Enable */
  UINT32                      Acpi : 1;
  
  /* MeasuredBoot Enable */
  UINT32                      MeasuredBoot : 1;
  
  /* S0ix (Low Power Idle) Enable */
  UINT32                      S0ix : 1;
  
  /* Intel(R) Dynamic Tuning Technology Enable */
  UINT32                      DTT : 1;
  
  /* ME FIPS Mode Enable */
  UINT32                      MeFipsMode : 1;
  
  /* Reserved */
  UINT32                      Rsvd : 27;

} FEATURES_DATA;


typedef struct {
  
  /* N/A */
  UINT8                       GpioHeaderSize;
  
  /* N/A */
  UINT8                       GpioBaseTableId;
  
  /* N/A */
  UINT16                      GpioItemSize;
  
  /* N/A */
  UINT16                      GpioItemCount;
  
  /* N/A */
  UINT8                       GpioItemIdBitOff;
  
  /* N/A */
  UINT8                       GpioItemIdBitLen;
  
  /* N/A */
  UINT8                       GpioItemValidBitOff;
  
  /* N/A */
  UINT8                       GpioItemUnused;
  
  /* N/A */
  UINT8                       GpioBaseTableBitMask[38];
  
  /* N/A */
  UINT8                       GpioTableData[0];

} GPIO_CFG_HDR;


typedef struct {
  
  /* N/A */
  FEATURES_DATA               Features;

} FEATURES_CFG_DATA;


typedef struct {
  
  /* Intel(R) TCC Mode */
  UINT8                       TccEnable;
  
  /* Data Streams Optimizer */
  UINT8                       TccTuning;
  
  /* Software SRAM */
  UINT8                       TccSoftSram;
  
  /* Error Log */
  UINT8                       TccErrorLog;

} TCC_CFG_DATA;


typedef struct {
  
  /* Spd Address Table */
  UINT8                       SpdAddressTable[16];
  
  /* Spd Data MC0 CH0 DIMM0 */
  UINT8                       SpdDataSel000;
  
  /* Spd Data MC0 CH0 DIMM1 */
  UINT8                       SpdDataSel001;
  
  /* Spd Data MC0 CH1 DIMM0 */
  UINT8                       SpdDataSel010;
  
  /* Spd Data MC0 CH1 DIMM1 */
  UINT8                       SpdDataSel011;
  
  /* Spd Data MC0 CH2 DIMM0 */
  UINT8                       SpdDataSel020;
  
  /* Spd Data MC0 CH2 DIMM1 */
  UINT8                       SpdDataSel021;
  
  /* Spd Data MC0 CH3 DIMM0 */
  UINT8                       SpdDataSel030;
  
  /* Spd Data MC0 CH3 DIMM1 */
  UINT8                       SpdDataSel031;
  
  /* Spd Data MC1 CH0 DIMM0 */
  UINT8                       SpdDataSel100;
  
  /* Spd Data MC1 CH0 DIMM1 */
  UINT8                       SpdDataSel101;
  
  /* Spd Data MC1 CH1 DIMM0 */
  UINT8                       SpdDataSel110;
  
  /* Spd Data MC1 CH1 DIMM1 */
  UINT8                       SpdDataSel111;
  
  /* Spd Data MC1 CH2 DIMM0 */
  UINT8                       SpdDataSel120;
  
  /* Spd Data MC1 CH2 DIMM1 */
  UINT8                       SpdDataSel121;
  
  /* Spd Data MC1 CH3 DIMM0 */
  UINT8                       SpdDataSel130;
  
  /* Spd Data MC1 CH3 DIMM1 */
  UINT8                       SpdDataSel131;
  
  /* Dqs Map CPU to DRAM MC 0 CH 0 */
  UINT8                       DqsMapCpu2DramMc0Ch0[2];
  
  /* Dqs Map CPU to DRAM MC 0 CH 1 */
  UINT8                       DqsMapCpu2DramMc0Ch1[2];
  
  /* Dqs Map CPU to DRAM MC 0 CH 2 */
  UINT8                       DqsMapCpu2DramMc0Ch2[2];
  
  /* Dqs Map CPU to DRAM MC 0 CH 3 */
  UINT8                       DqsMapCpu2DramMc0Ch3[2];
  
  /* Dqs Map CPU to DRAM MC 1 CH 0 */
  UINT8                       DqsMapCpu2DramMc1Ch0[2];
  
  /* Dqs Map CPU to DRAM MC 1 CH 1 */
  UINT8                       DqsMapCpu2DramMc1Ch1[2];
  
  /* Dqs Map CPU to DRAM MC 1 CH 2 */
  UINT8                       DqsMapCpu2DramMc1Ch2[2];
  
  /* Dqs Map CPU to DRAM MC 1 CH 3 */
  UINT8                       DqsMapCpu2DramMc1Ch3[2];
  
  /* MC0 Dq Byte Map CH0 */
  UINT8                       DqMapCpu2DramMc0Ch0[16];
  
  /* MC0 Dq Byte Map CH1 */
  UINT8                       DqMapCpu2DramMc0Ch1[16];
  
  /* MC0 Dq Byte Map CH2 */
  UINT8                       DqMapCpu2DramMc0Ch2[16];
  
  /* MC0 Dq Byte Map CH3 */
  UINT8                       DqMapCpu2DramMc0Ch3[16];
  
  /* MC1 Dq Byte Map CH0 */
  UINT8                       DqMapCpu2DramMc1Ch0[16];
  
  /* MC1 Dq Byte Map CH1 */
  UINT8                       DqMapCpu2DramMc1Ch1[16];
  
  /* MC1 Dq Byte Map CH2 */
  UINT8                       DqMapCpu2DramMc1Ch2[16];
  
  /* MC1 Dq Byte Map CH3 */
  UINT8                       DqMapCpu2DramMc1Ch3[16];
  
  /* Dqs Pins Interleaved Setting */
  UINT8                       DqPinsInterleaved;
  
  /* RcompResistor settings */
  UINT16                      RcompResistor;
  
  /* RcompTarget settings */
  UINT8                       RcompTarget[5];
  
  /* MRC Fast Boot */
  UINT8                       MrcFastBoot;
  
  /* Rank Margin Tool per Task */
  UINT8                       RmtPerTask;
  
  /* MRC Safe Config */
  UINT8                       MrcSafeConfig;
  
  /* Exit On Failure (MRC) */
  UINT8                       ExitOnFailure;
  
  /* Ch Hash Support */
  UINT8                       ChHashEnable;
  
  /* Ch Hash Interleaved Bit */
  UINT8                       ChHashInterleaveBit;
  
  /* Ch Hash Mask */
  UINT16                      ChHashMask;
  
  /* Memory Remap */
  UINT8                       RemapEnable;
  
  /* Scrambler Support */
  UINT8                       ScramblerSupport;
  
  /* Enhanced Interleave support */
  UINT8                       EnhancedInterleave;
  
  /* Rank Interleave support */
  UINT8                       RankInterleave;
  
  /* Minimum Platform Memory Size */
  UINT64                      PlatformMemorySize;
  
  /* CPU ratio value */
  UINT8                       CpuRatio;
  
  /* Boot frequency */
  UINT8                       BootFrequency;
  
  /* Number of active big cores */
  UINT8                       ActiveCoreCount;
  
  /* Processor Early Power On Configuration FCLK setting */
  UINT8                       FClkFrequency;
  
  /* Total Memory Encryption Enable */
  UINT8                       TmeEnable;
  
  /* Txt Dpr Memory Base */
  UINT64                      TxtDprMemoryBase;
  
  /* Txt Dpr Memory Size */
  UINT32                      TxtDprMemorySize;
  
  /* SinitMemorySize */
  UINT32                      SinitMemorySize;
  
  /* TxtHeapMemorySize */
  UINT32                      TxtHeapMemorySize;
  
  /* Number of active small cores */
  UINT8                       ActiveSmallCoreCount;
  
  /* BiosSize */
  UINT16                      BiosSize;
  
  /* ACM Base */
  UINT32                      BiosAcmBase;
  
  /* Enable PCIE RP Mask */
  UINT32                      PcieRpEnableMask;
  
  /* Usage type for ClkSrc */
  UINT8                       PcieClkSrcUsage[18];
  
  /* ClkReq-to-ClkSrc mapping */
  UINT8                       PcieClkSrcClkReq[18];
  
  /* Enable PCIE RP Mask */
  UINT32                      CpuPcieRpEnableMask;
  
  /* Enable ClockReq Messaging */
  UINT8                       CpuPcieRpClockReqMsgEnable[3];
  
  /* PCIE RP Pcie Speed */
  UINT8                       CpuPcieRpPcieSpeed[4];
  
  /* Enable Intel HD Audio (Azalia) */
  UINT8                       PchHdaEnable;
  
  /* Enable HD Audio DSP */
  UINT8                       PchHdaDspEnable;
  
  /* Enable HD Audio Link */
  UINT8                       PchHdaAudioLinkHdaEnable;
  
  /* Enable HD Audio DMIC_N Link */
  UINT8                       PchHdaAudioLinkDmicEnable[2];
  
  /* HD Audio DMIC Link Clock Select */
  UINT8                       PchHdaAudioLinkDmicClockSelect[2];
  
  /* Enable HD Audio SoundWire#N Link */
  UINT8                       PchHdaAudioLinkSndwEnable[4];
  
  /* iDisp-Link T-mode */
  UINT8                       PchHdaIDispLinkTmode;
  
  /* iDisp-Link Frequency */
  UINT8                       PchHdaIDispLinkFrequency;
  
  /* iDisplay Audio Codec disconnection */
  UINT8                       PchHdaIDispCodecDisconnect;
  
  /* Disable VT-d */
  UINT8                       VtdDisable;
  
  /* Vtd Programming for Igd */
  UINT8                       VtdIgdEnable;
  
  /* State of X2APIC_OPT_OUT bit in the DMAR table */
  UINT8                       X2ApicOptOut;
  
  /* PMR Size */
  UINT32                      DmaBufferSize;
  
  /* State of DMA_CONTROL_GUARANTEE bit in the DMAR table */
  UINT8                       DmaControlGuarantee;
  
  /* MMIO Size */
  UINT16                      MmioSize;
  
  /* MMIO size adjustment for AUTO mode */
  UINT16                      MmioSizeAdjustment;
  
  /* Enable SMBus */
  UINT8                       SmbusEnable;
  
  /* Number of RsvdSmbusAddressTable. */
  UINT8                       PchNumRsvdSmbusAddresses;
  
  /* Point of RsvdSmbusAddressTable */
  UINT32                      RsvdSmbusAddressTablePtr;
  
  /* Realtime Memory Timing */
  UINT8                       RealtimeMemoryTiming;
  
  /* SA GV */
  UINT8                       SaGv;
  
  /* Page Close Idle Timeout */
  UINT8                       DisPgCloseIdleTimeout;
  
  /* Power Down Mode */
  UINT8                       PowerDownMode;
  
  /* Enable or Disable VMX */
  UINT8                       VmxEnable;
  
  /* WRC Feature */
  UINT8                       WrcFeatureEnable;
  
  /* Hyper Threading Enable/Disable */
  UINT8                       HyperThreading;
  
  /* Enable Gt CLOS */
  UINT8                       GtClosEnable;
  
  /* Lane Used of CSI port */
  UINT8                       IpuLaneUsed[8];
  
  /* Speed of each CSI port */
  UINT8                       CsiSpeed[8];
  
  /* DMI Max Link Speed */
  UINT8                       DmiMaxLinkSpeed;
  
  /* DMI ASPM Configuration:{Combo */
  UINT8                       DmiAspm;
  
  /* DMI ASPM Control Configuration:{Combo */
  UINT8                       DmiAspmCtrl;
  
  /* Enable/Disable CPU DMI GEN3 Phase 23 Bypass */
  UINT8                       Gen3EqPhase23Bypass;
  
  /* Enable/Disable CPU DMI GEN3 Phase 3 Bypass */
  UINT8                       Gen3EqPhase3Bypass;
  
  /* DMI Gen3 Transmitter Pre-Cursor Coefficient */
  UINT8                       DmiGen3Ltcpre[8];
  
  /* DMI Gen3 Root port preset Rx values per lane */
  UINT8                       DmiGen3DsPortRxPreset[8];
  
  /* DMI Gen3 Root port preset Tx values per lane */
  UINT8                       DmiGen3DsPortTxPreset[8];
  
  /* DMI Gen3 Root port preset values per lane */
  UINT8                       DmiGen3RootPortPreset[8];
  
  /* DMI Gen3 End port preset values per lane */
  UINT8                       DmiGen3EndPointPreset[8];
  
  /* DMI Gen3 End port Hint values per lane */
  UINT8                       DmiGen3EndPointHint[8];
  
  /* PCIE Hw Eq Gen3 CoeffList Cm */
  UINT8                       CpuDmiHwEqGen3CoeffListCm[8];
  
  /* PCIE Hw Eq Gen3 CoeffList Cp */
  UINT8                       CpuDmiHwEqGen3CoeffListCp[8];
  
  /* DMI Hw Eq Gen4 CoeffList Cm */
  UINT8                       CpuDmiHwEqGen4CoeffListCm[8];
  
  /* DMI Hw Eq Gen4 CoeffList Cp */
  UINT8                       CpuDmiHwEqGen4CoeffListCp[8];
  
  /* DMI Hw Eq Gen3 CoeffList Cm */
  UINT8                       PchDmiHwEqGen3CoeffListCm[8];
  
  /* DMI Hw Eq Gen3 CoeffList Cp */
  UINT8                       PchDmiHwEqGen3CoeffListCp[8];
  
  /* Enable/Disable CPU DMI Gen3 EQ Local Transmitter Coefficient Override Enable */
  UINT8                       Gen3LtcoEnable;
  
  /* TCSS Thunderbolt PCIE Root Port 0 Enable */
  UINT8                       TcssItbtPcie0En;
  
  /* TCSS Thunderbolt PCIE Root Port 1 Enable */
  UINT8                       TcssItbtPcie1En;
  
  /* TCSS Thunderbolt PCIE Root Port 2 Enable */
  UINT8                       TcssItbtPcie2En;
  
  /* TCSS Thunderbolt PCIE Root Port 3 Enable */
  UINT8                       TcssItbtPcie3En;
  
  /* TCSS USB HOST (xHCI) Enable */
  UINT8                       TcssXhciEn;
  
  /* TCSS DMA0 Enable */
  UINT8                       TcssDma0En;
  
  /* TCSS DMA1 Enable */
  UINT8                       TcssDma1En;
  
  /* TCSS USB Port Enable */
  UINT8                       UsbTcPortEnPreMem;
  
  /* Tseg Size */
  UINT32                      TsegSize;
  
  /* Board Type */
  UINT8                       UserBd;
  
  /* C6DRAM power gating feature */
  UINT8                       EnableC6Dram;
  
  /* CPU Trace Hub Mode */
  UINT8                       CpuTraceHubMode;
  
  /* CPU Trace Hub Memory Region 0 */
  UINT8                       CpuTraceHubMemReg0Size;
  
  /* CPU Trace Hub Memory Region 1 */
  UINT8                       CpuTraceHubMemReg1Size;
  
  /* PCH Trace Hub Mode */
  UINT8                       PchTraceHubMode;
  
  /* PCH Trace Hub Memory Region 0 buffer Size */
  UINT8                       PchTraceHubMemReg0Size;
  
  /* PCH Trace Hub Memory Region 1 buffer Size */
  UINT8                       PchTraceHubMemReg1Size;
  
  /* Platform Debug Consent */
  UINT8                       PlatformDebugConsent;
  
  /* Platform Debug Consent */
  UINT8                       Ddr4OneDpc;
  
  /* First ECC Dimm BitMask */
  UINT8                       FirstDimmBitMaskEcc;
  
  /* Write DS Training */
  UINT8                       WRDS;
  
  /* DCI Enable */
  UINT8                       DciEn;
  
  /* Skip external display device scanning */
  UINT8                       SkipExtGfxScan;
  
  /* Lock PCU Thermal Management registers */
  UINT8                       LockPTMregs;
  
  /* PRMRR Size */
  UINT32                      PrmrrSize;
  
  /* LP5 Bank Mode */
  UINT8                       Lp5BankMode;
  
  /* Ibecc */
  UINT8                       Ibecc;
  
  /* IbeccOperationMode */
  UINT8                       IbeccOperationMode;
  
  /* IbeccProtectedRegionEnable */
  UINT8                       IbeccProtectedRegionEnable[8];
  
  /* IbeccProtectedRegionBases */
  UINT32                      IbeccProtectedRegionBase[8];
  
  /* IbeccProtectedRegionMasks */
  UINT32                      IbeccProtectedRegionMask[8];
  
  /* Disable and Lock Watch Dog Register */
  UINT8                       WdtDisableAndLock;
  
  /* Rank Margin Tool */
  UINT8                       RMT;
  
  /* Generate BIOS Data ACPI Table */
  UINT8                       BdatEnable;
  
  /* BdatTestType */
  UINT8                       BdatTestType;
  
  /* Retrain Margin Check */
  UINT8                       RMC;
  
  /* Memory Test */
  UINT8                       MEMTST;
  
  /* Early Command Training */
  UINT8                       ECT;
  
  /* Enable/Disable I2C Postcode */
  UINT8                       I2cPostCode;
  
  /* Enable/Disable MC Starv2Med Priority on New Request */
  UINT8                       DisableStarv2medPrioOnNewReq;
  
  /* N/A */
  UINT8                       Dummy;
  
  /* N/A */
  UINT8                       __reserved[3];

} MEMORY_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 0 */
  UINT8                       MemorySpdPtr0[512];

} MEM_SPD0_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 1 */
  UINT8                       MemorySpdPtr1[512];

} MEM_SPD1_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 2 */
  UINT8                       MemorySpdPtr2[512];

} MEM_SPD2_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 3 */
  UINT8                       MemorySpdPtr3[512];

} MEM_SPD3_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 4 */
  UINT8                       MemorySpdPtr4[512];

} MEM_SPD4_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 5 */
  UINT8                       MemorySpdPtr5[512];

} MEM_SPD5_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 6 */
  UINT8                       MemorySpdPtr6[512];

} MEM_SPD6_CFG_DATA;


typedef struct {
  
  /* Memory SPD Data 7 */
  UINT8                       MemorySpdPtr7[512];

} MEM_SPD7_CFG_DATA;


typedef struct {
  
  /* MRC Training Enforcement */
  UINT8                       MrcTrainingEnforcement;
  
  /* N/A */
  UINT8                       Dummy[3];

} DYNAMIC_CFG_DATA;


typedef struct {
  
  /* InterruptRemappingSupport */
  UINT8                       InterruptRemappingSupport;
  
  /* Enable PCH TSN */
  UINT8                       PchTsnEnable;
  
  /* TSN Link Speed */
  UINT8                       PchTsnLinkSpeed;
  
  /* Enable TSN Multi-VC */
  UINT8                       PchTsnMultiVcEnable;
  
  /* Intel Turbo Boost Max Technology 3.0 */
  UINT8                       EnableItbm;
  
  /* AC Split Lock */
  UINT8                       AcSplitLock;
  
  /* PSF Tcc */
  UINT8                       PsfTccEnable;
  
  /* Pch Dmi Aspm Ctrl */
  UINT8                       PchDmiAspmCtrl;
  
  /* PCH Legacy IO Low Latency Enable */
  UINT8                       PchLegacyIoLowLatency;
  
  /* Enable/Disable IGFX RenderStandby */
  UINT8                       RenderStandby;
  
  /* Enable/Disable IGFX PmSupport */
  UINT8                       PmSupport;
  
  /* CPU PCIe RootPort Clock Gating */
  UINT8                       CpuPcieClockGating;
  
  /* CPU PCIe RootPort Power Gating */
  UINT8                       CpuPciePowerGating;
  
  /* PCIE RP Aspm */
  UINT8                       CpuPcieRpAspm[4];
  
  /* PCIE RP L1 Substates */
  UINT8                       CpuPcieRpL1Substates[4];
  
  /* PTM for PCIE RP Mask */
  UINT8                       CpuPcieRpPtmEnabled[4];
  
  /* VC for PCIE RP Mask */
  UINT8                       CpuPcieRpVcEnabled[4];
  
  /* Multi-VC for PCIE RP Mask */
  UINT8                       CpuPcieRpMultiVcEnabled[4];
  
  /* Timed GPIO 0 */
  UINT8                       EnableTimedGpio0;
  
  /* Timed GPIO 1 */
  UINT8                       EnableTimedGpio1;
  
  /* Enable SATA */
  UINT8                       SataEnable;
  
  /* SATA Mode */
  UINT8                       SataMode;
  
  /* PCH Sata Pwr Opt Enable */
  UINT8                       SataPwrOptEnable;
  
  /* SATA LED */
  UINT8                       SataLedEnable;
  
  /* Enable SATA ports */
  UINT8                       SataPortsEnable[8];
  
  /* Enable SATA DEVSLP Feature */
  UINT8                       SataPortsDevSlp[8];
  
  /* Enable SATA Port DmVal */
  UINT8                       SataPortsDmVal[8];
  
  /* Enable SATA Port DmVal */
  UINT16                      SataPortsDitoVal[8];
  
  /* Enable USB2 ports */
  UINT8                       PortUsb20Enable[16];
  
  /* Enable USB3 ports */
  UINT8                       PortUsb30Enable[10];
  
  /* USB2 Port Over Current Pin */
  UINT8                       Usb2OverCurrentPin[16];
  
  /* USB3 Port Over Current Pin */
  UINT8                       Usb3OverCurrentPin[10];
  
  /* USB Per Port HS Preemphasis Bias */
  UINT8                       Usb2PhyPetxiset[16];
  
  /* USB Per Port HS Transmitter Emphasis */
  UINT8                       Usb2PhyPredeemp[16];
  
  /* USB Per Port HS Transmitter Bias */
  UINT8                       Usb2PhyTxiset[16];
  
  /* USB Per Port Half Bit Pre-emphasis */
  UINT8                       Usb2PhyPehalfbit[16];
  
  /* UARTn Device Mode */
  UINT8                       SerialIoUartMode[7];
  
  /* Power Gating mode for each Serial IO UART that works in COM mode */
  UINT8                       SerialIoUartPowerGating[7];
  
  /* Enable Dma for each Serial IO UART that supports it */
  UINT8                       SerialIoUartDmaEnable[7];
  
  /* Enables UART hardware flow control, CTS and RTS lines */
  UINT8                       SerialIoUartAutoFlow[7];
  
  /* SPIn Device Mode */
  UINT8                       SerialIoSpiMode[7];
  
  /* SPI<N> Chip Select Polarity */
  UINT8                       SerialIoSpiCsPolarity[14];
  
  /* I2Cn Device Mode */
  UINT8                       SerialIoI2cMode[8];
  
  /* PCH SerialIo I2C Pads Termination */
  UINT8                       PchSerialIoI2cPadsTermination[8];
  
  /* CPU USB3 Port Over Current Pin */
  UINT8                       CpuUsb3OverCurrentPin[8];
  
  /* Enable PCH UFS */
  UINT8                       PchUfsEnable[2];
  
  /* Enable PCH ISH I2C pins assigned */
  UINT8                       PchIshI2cEnable[3];
  
  /* Enable PCH ISH GP pins assigned */
  UINT8                       PchIshGpEnable[8];
  
  /* PCIE RP Max Payload */
  UINT8                       PcieRpMaxPayload[28];
  
  /* PCIE RP L1 Substates */
  UINT8                       PcieRpL1Substates[28];
  
  /* PCIE RP Ltr Enable */
  UINT8                       PcieRpLtrEnable[28];
  
  /* Enable PCIE RP Clk Req Detect */
  UINT8                       PcieRpClkReqDetect[28];
  
  /* PCIE RP Advanced Error Report */
  UINT8                       PcieRpAdvancedErrorReporting[28];
  
  /* PCIE RP Aspm */
  UINT8                       PcieRpAspm[28];
  
  /* PCIe PTM enable/disable */
  UINT8                       PciePtm[28];
  
  /* PCIE RP Pcie Speed */
  UINT8                       PcieRpPcieSpeed[28];
  
  /* Enable/Disable PTM */
  UINT8                       PtmEnabled[4];
  
  /* PCH Pm Slp A Min Assert */
  UINT8                       PchPmSlpAMinAssert;
  
  /* Embedded Controller Availability */
  UINT8                       EcAvailable;
  
  /* CPU CrashLog support */
  UINT8                       CpuCrashLogEnable;
  
  /* CrashLog BERT Reporting */
  UINT8                       CrashLogReporting;
  
  /* Opio Recentering Ctrl */
  UINT8                       OpioRecenter;
  
  /* L2 QOS Enumeration */
  UINT8                       L2QosEnumerationEn;
  
  /* IEH Mode */
  UINT8                       IehMode;
  
  /* Enable D3 Hot in TCSS */
  UINT8                       D3HotEnable;
  
  /* Enable D3 Cold in TCSS */
  UINT8                       D3ColdEnable;
  
  /* TC State in TCSS */
  UINT8                       TcCstateLimit;
  
  /* VCCST request for IOM */
  UINT8                       VccSt;

} SILICON_CFG_DATA;


typedef struct {
  
  /* Enable or Disable HWP */
  UINT8                       Hwp;
  
  /* Hardware Duty Cycle Control */
  UINT8                       HdcControl;
  
  /* Package Long duration turbo mode time */
  UINT8                       PowerLimit1Time;
  
  /* Short Duration Turbo Mode */
  UINT8                       PowerLimit2;
  
  /* Turbo settings Lock */
  UINT8                       TurboPowerLimitLock;
  
  /* Package PL3 time window */
  UINT8                       PowerLimit3Time;
  
  /* Package PL3 Duty Cycle */
  UINT8                       PowerLimit3DutyCycle;
  
  /* Package PL3 Lock */
  UINT8                       PowerLimit3Lock;
  
  /* Package PL4 Lock */
  UINT8                       PowerLimit4Lock;
  
  /* TCC Activation Offset */
  UINT8                       TccActivationOffset;
  
  /* Tcc Offset Clamp Enable/Disable */
  UINT8                       TccOffsetClamp;
  
  /* Tcc Offset Lock */
  UINT8                       TccOffsetLock;
  
  /* Turbo Mode */
  UINT8                       TurboMode;
  
  /* Custom Ratio State Entries */
  UINT8                       NumberOfEntries;
  
  /* Custom Short term Power Limit time window */
  UINT8                       Custom1PowerLimit1Time;
  
  /* Custom Turbo Activation Ratio */
  UINT8                       Custom1TurboActivationRatio;
  
  /* Custom Config Tdp Control */
  UINT8                       Custom1ConfigTdpControl;
  
  /* Custom Short term Power Limit time window */
  UINT8                       Custom2PowerLimit1Time;
  
  /* Custom Turbo Activation Ratio */
  UINT8                       Custom2TurboActivationRatio;
  
  /* Custom Config Tdp Control */
  UINT8                       Custom2ConfigTdpControl;
  
  /* Custom Short term Power Limit time window */
  UINT8                       Custom3PowerLimit1Time;
  
  /* Custom Turbo Activation Ratio */
  UINT8                       Custom3TurboActivationRatio;
  
  /* Custom Config Tdp Control */
  UINT8                       Custom3ConfigTdpControl;
  
  /* ConfigTdp mode settings Lock */
  UINT8                       ConfigTdpLock;
  
  /* Load Configurable TDP SSDT */
  UINT8                       ConfigTdpBios;
  
  /* PL1 Enable value */
  UINT8                       PsysPowerLimit1;
  
  /* PL1 timewindow */
  UINT8                       PsysPowerLimit1Time;
  
  /* PL2 Enable Value */
  UINT8                       PsysPowerLimit2;
  
  /* Enable or Disable MLC Streamer Prefetcher */
  UINT8                       MlcStreamerPrefetcher;
  
  /* Enable or Disable MLC Spatial Prefetcher */
  UINT8                       MlcSpatialPrefetcher;
  
  /* Enable or Disable Monitor /MWAIT instructions */
  UINT8                       MonitorMwaitEnable;
  
  /* Enable or Disable initialization of machine check registers */
  UINT8                       MachineCheckEnable;
  
  /* AP Idle Manner of waiting for SIPI */
  UINT8                       ApIdleManner;
  
  /* Control on Processor Trace output scheme */
  UINT8                       ProcessorTraceOutputScheme;
  
  /* Enable or Disable Processor Trace feature */
  UINT8                       ProcessorTraceEnable;
  
  /* Enable or Disable Voltage Optimization feature */
  UINT8                       VoltageOptimization;
  
  /* Enable or Disable Intel SpeedStep Technology */
  UINT8                       Eist;
  
  /* Enable or Disable Energy Efficient P-state */
  UINT8                       EnergyEfficientPState;
  
  /* Enable or Disable Energy Efficient Turbo */
  UINT8                       EnergyEfficientTurbo;
  
  /* Enable or Disable T states */
  UINT8                       TStates;
  
  /* Enable or Disable Bi-Directional PROCHOT# */
  UINT8                       BiProcHot;
  
  /* Enable or Disable PROCHOT# signal being driven externally */
  UINT8                       DisableProcHotOut;
  
  /* Enable or Disable PROCHOT# Response */
  UINT8                       ProcHotResponse;
  
  /* Enable or Disable VR Thermal Alert */
  UINT8                       DisableVrThermalAlert;
  
  /* Enable or Disable Thermal Reporting */
  UINT8                       EnableAllThermalFunctions;
  
  /* Enable or Disable Thermal Monitor */
  UINT8                       ThermalMonitor;
  
  /* Enable or Disable CPU power states (C-states) */
  UINT8                       Cx;
  
  /* Configure C-State Configuration Lock */
  UINT8                       PmgCstCfgCtrlLock;
  
  /* Enable or Disable Enhanced C-states */
  UINT8                       C1e;
  
  /* Enable or Disable Package Cstate Demotion */
  UINT8                       PkgCStateDemotion;
  
  /* Enable or Disable Package Cstate UnDemotion */
  UINT8                       PkgCStateUnDemotion;
  
  /* Enable or Disable CState-Pre wake */
  UINT8                       CStatePreWake;
  
  /* Enable or Disable TimedMwait Support. */
  UINT8                       TimedMwait;
  
  /* Enable or Disable IO to MWAIT redirection */
  UINT8                       CstCfgCtrIoMwaitRedirection;
  
  /* Set the Max Pkg Cstate */
  UINT8                       PkgCStateLimit;
  
  /* TimeUnit for C-State Latency Control0 */
  UINT8                       CstateLatencyControl0TimeUnit;
  
  /* TimeUnit for C-State Latency Control1 */
  UINT8                       CstateLatencyControl1TimeUnit;
  
  /* TimeUnit for C-State Latency Control2 */
  UINT8                       CstateLatencyControl2TimeUnit;
  
  /* TimeUnit for C-State Latency Control3 */
  UINT8                       CstateLatencyControl3TimeUnit;
  
  /* TimeUnit for C-State Latency Control4 */
  UINT8                       CstateLatencyControl4TimeUnit;
  
  /* TimeUnit for C-State Latency Control5 */
  UINT8                       CstateLatencyControl5TimeUnit;
  
  /* Lock prochot configuration */
  UINT8                       ProcHotLock;
  
  /* Configuration for boot TDP selection */
  UINT8                       ConfigTdpLevel;
  
  /* Max P-State Ratio */
  UINT8                       MaxRatio;
  
  /* P-state ratios for custom P-state table */
  UINT8                       StateRatio[40];
  
  /* P-state ratios for max 16 version of custom P-state table */
  UINT8                       StateRatioMax16[16];
  
  /* Platform Power Pmax */
  UINT16                      PsysPmax;
  
  /* Interrupt Response Time Limit of C-State LatencyContol1 */
  UINT16                      CstateLatencyControl1Irtl;
  
  /* Interrupt Response Time Limit of C-State LatencyContol2 */
  UINT16                      CstateLatencyControl2Irtl;
  
  /* Interrupt Response Time Limit of C-State LatencyContol3 */
  UINT16                      CstateLatencyControl3Irtl;
  
  /* Interrupt Response Time Limit of C-State LatencyContol4 */
  UINT16                      CstateLatencyControl4Irtl;
  
  /* Interrupt Response Time Limit of C-State LatencyContol5 */
  UINT16                      CstateLatencyControl5Irtl;
  
  /* Package Long duration turbo mode power limit */
  UINT32                      PowerLimit1;
  
  /* Package Short duration turbo mode power limit */
  UINT32                      PowerLimit2Power;
  
  /* Package PL3 power limit */
  UINT32                      PowerLimit3;
  
  /* Package PL4 power limit */
  UINT32                      PowerLimit4;
  
  /* Tcc Offset Time Window for RATL */
  UINT32                      TccOffsetTimeWindowForRatl;
  
  /* Short term Power Limit value for custom cTDP level 1 */
  UINT32                      Custom1PowerLimit1;
  
  /* Long term Power Limit value for custom cTDP level 1 */
  UINT32                      Custom1PowerLimit2;
  
  /* Short term Power Limit value for custom cTDP level 2 */
  UINT32                      Custom2PowerLimit1;
  
  /* Long term Power Limit value for custom cTDP level 2 */
  UINT32                      Custom2PowerLimit2;
  
  /* Short term Power Limit value for custom cTDP level 3 */
  UINT32                      Custom3PowerLimit1;
  
  /* Long term Power Limit value for custom cTDP level 3 */
  UINT32                      Custom3PowerLimit2;
  
  /* Platform PL1 power */
  UINT32                      PsysPowerLimit1Power;
  
  /* Platform PL2 power */
  UINT32                      PsysPowerLimit2Power;
  
  /* Race To Halt */
  UINT8                       RaceToHalt;
  
  /* Set Three Strike Counter Disable */
  UINT8                       ThreeStrikeCounterDisable;
  
  /* Set HW P-State Interrupts Enabled for for MISC_PWR_MGMT */
  UINT8                       HwpInterruptControl;
  
  /* Intel Turbo Boost Max Technology 3.0 */
  UINT8                       EnableItbm;
  
  /* Enable or Disable C1 Cstate Demotion */
  UINT8                       C1StateAutoDemotion;
  
  /* Enable or Disable C1 Cstate UnDemotion */
  UINT8                       C1StateUnDemotion;
  
  /* Minimum Ring ratio limit override */
  UINT8                       MinRingRatioLimit;
  
  /* Maximum Ring ratio limit override */
  UINT8                       MaxRingRatioLimit;
  
  /* Enable or Disable Per Core P State OS control */
  UINT8                       EnablePerCorePState;
  
  /* Enable or Disable HwP Autonomous Per Core P State OS control */
  UINT8                       EnableHwpAutoPerCorePstate;
  
  /* Enable or Disable HwP Autonomous EPP Grouping */
  UINT8                       EnableHwpAutoEppGrouping;
  
  /* Enable or Disable EPB override over PECI */
  UINT8                       EnableEpbPeciOverride;
  
  /* Enable or Disable Fast MSR for IA32_HWP_REQUEST */
  UINT8                       EnableFastMsrHwpReq;
  
  /* ReservedCpuPostMemTest */
  UINT8                       ReservedCpuPostMemTest[17];
  
  /* Power State 3 enable/disable */
  UINT8                       Psi3Enable[5];
  
  /* Power State 4 enable/disable */
  UINT8                       Psi4Enable[5];
  
  /* Imon slope correction */
  UINT16                      ImonSlope[5];
  
  /* Imon offset correction */
  UINT16                      ImoniOffset[5];
  
  /* Enable/Disable BIOS configuration of VR */
  UINT8                       VrConfigEnable[5];
  
  /* Thermal Design Current enable/disable */
  UINT8                       TdcEnable[5];
  
  /* Thermal Design Current time window */
  UINT8                       TdcTimeWindow[5];
  
  /* Thermal Design Current Lock */
  UINT8                       TdcLock[5];
  
  /* Platform Psys slope correction */
  UINT8                       PsysSlope;
  
  /* Platform Psys offset correction */
  UINT8                       PsysOffset;
  
  /* Acoustic Noise Mitigation feature */
  UINT8                       AcousticNoiseMitigation;
  
  /* Disable Fast Slew Rate for Deep Package C States for VR IA domain */
  UINT8                       FastPkgCRampDisableIa;
  
  /* Slew Rate configuration for Deep Package C States for VR IA domain */
  UINT8                       SlowSlewRateForIa;
  
  /* Slew Rate configuration for Deep Package C States for VR GT domain */
  UINT8                       SlowSlewRateForGt;
  
  /* Slew Rate configuration for Deep Package C States for VR SA domain */
  UINT8                       SlowSlewRateForSa;
  
  /* Thermal Design Current current limit */
  UINT16                      TdcCurrentLimit[5];
  
  /* AcLoadline}TYPE:{EditNum, HEX, (0x00,0xFFFFFFFFFFFFFFFFFFFF) */
  UINT16                      AcLoadline[5];
  
  /* DcLoadline */
  UINT16                      DcLoadline[5];
  
  /* Power State 1 Threshold current */
  UINT16                      Psi1Threshold[5];
  
  /* Power State 2 Threshold current */
  UINT16                      Psi2Threshold[5];
  
  /* Power State 3 Threshold current */
  UINT16                      Psi3Threshold[5];
  
  /* Icc Max limit */
  UINT16                      IccMax[5];
  
  /* VR Voltage Limit */
  UINT16                      VrVoltageLimit[5];
  
  /* Disable Fast Slew Rate for Deep Package C States for VR GT domain */
  UINT8                       FastPkgCRampDisableGt;
  
  /* Disable Fast Slew Rate for Deep Package C States for VR SA domain */
  UINT8                       FastPkgCRampDisableSa;
  
  /* Enable VR specific mailbox command */
  UINT8                       SendVrMbxCmd;
  
  /* Skip Multi-Processor Initialization */
  UINT8                       SkipMpInit;
  
  /* FIVR RFI Frequency */
  UINT16                      FivrRfiFrequency;
  
  /* FIVR RFI Spread Spectrum */
  UINT8                       FivrSpreadSpectrum;
  
  /* Disable Fast Slew Rate for Deep Package C States for VR FIVR domain */
  UINT8                       FastPkgCRampDisableFivr;
  
  /* Slew Rate configuration for Deep Package C States for VR FIVR domain */
  UINT8                       SlowSlewRateForFivr;
  
  /* CpuBistData */
  UINT32                      CpuBistData;
  
  /* CpuMpPpi */
  UINT32                      CpuMpPpi;
  
  /* CpuMpHob */
  UINT32                      CpuMpHob;
  
  /* N/A */
  UINT8                       CpuPostMemRsvd[16];
  
  /* Enable or Disable Minimum Voltage Override */
  UINT8                       EnableMinVoltageOverride;
  
  /* Min Voltage for Runtime */
  UINT16                      MinVoltageRuntime;
  
  /* Base of memory region allocated for Processor Trace */
  UINT64                      ProcessorTraceMemBase;
  
  /* Memory region allocation for Processor Trace */
  UINT32                      ProcessorTraceMemLength;
  
  /* Min Voltage for C8 */
  UINT16                      MinVoltageC8;
  
  /* ReservedCpuPostMemProduction */
  UINT8                       ReservedCpuPostMemProduction[8];
  
  /* Turbo Ratio Limit Ratio array */
  UINT8                       TurboRatioLimitRatio[8];
  
  /* Turbo Ratio Limit Num Core array */
  UINT8                       TurboRatioLimitNumCore[8];
  
  /* Turbo Ratio Limit Ratio array */
  UINT8                       AtomTurboRatioLimitRatio[8];
  
  /* Turbo Ratio Limit Ratio array */
  UINT8                       AtomTurboRatioLimitNumCore[8];
  
  /* N/A */
  UINT16                      Dummy;
  
  /* N/A */
  UINT8                       __reserved;

} POWER_CFG_DATA;


typedef struct {
  
  /* Platform Security Discovery (PSD) */
  UINT32                      EnablePsd;

} PSD_CFG_DATA;


typedef struct {
  
  /* Low Power constraints Configuration for sata */
  UINT8                       PepSataContraints;
  
  /* Enable/disable Low Power constraints Uart */
  UINT8                       PepUart;
  
  /* Enable/disable Low Power constraints I2C0 */
  UINT8                       PepI2c0;
  
  /* Enable/disable Low Power constraints I2C1 */
  UINT8                       PepI2c1;
  
  /* Enable/disable Low Power constraints Xhci */
  UINT8                       PepXhci;
  
  /* Enable/disable Low Power constraints Audio */
  UINT8                       PepAudio;
  
  /* Enable/disable Low Power constraints Gfx */
  UINT8                       PepGfx;
  
  /* Enable/disable Low Power constraints Cpu */
  UINT8                       PepCpu;
  
  /* Enable/disable Low Power constraints eMMC */
  UINT8                       PepEmmc;
  
  /* Enable/disable Low Power constraints I2C2 */
  UINT8                       PepI2c2;
  
  /* Enable/disable Low Power constraints I2C3 */
  UINT8                       PepI2c3;
  
  /* Enable/disable Low Power constraints I2C4 */
  UINT8                       PepI2c4;
  
  /* Enable/disable Low Power constraints I2C5 */
  UINT8                       PepI2c5;
  
  /* Enable/disable Low Power constraints I2C6 */
  UINT8                       PepI2c6;
  
  /* Enable/disable Low Power constraints I2C7 */
  UINT8                       PepI2c7;
  
  /* Enable/disable Low Power constraints SPI */
  UINT8                       PepSpi;
  
  /* Enable/disable Low Power constraints Ipu */
  UINT8                       PepIpu;
  
  /* Enable/disable Low Power constraints Csme */
  UINT8                       PepCsme;
  
  /* Enable/disable Low Power constraints Gbe */
  UINT8                       PepGbe;
  
  /* Enable/disable Low Power constraints Thc0 */
  UINT8                       PepThc0;
  
  /* Enable/disable Low Power constraints Thc1 */
  UINT8                       PepThc1;
  
  /* Enable/disable Low Power constraints Tcss */
  UINT8                       PepTcss;
  
  /* Enable/disable Low Power constraints Gna */
  UINT8                       PepGna;
  
  /* Enable/disable Low Power constraints Vmd */
  UINT8                       PepVmd;
  
  /* Enable/disable Low Power constraints Heci3 */
  UINT8                       PepHeci3;
  
  /* Low Power constraints Configuration for Pcie Storage */
  UINT8                       PepPcieStorage;
  
  /* Low Power constraints Configuration for LAN */
  UINT8                       PepPcieLan;
  
  /* Low Power constraints Configuration for WLAN */
  UINT8                       PepPcieWlan;
  
  /* Low Power constraints Configuration for Gfx */
  UINT8                       PepPcieGfx;
  
  /* Low Power constraints Configuration for Other */
  UINT8                       PepPcieOther;
  
  /* Enable/disable Low Power constraints PcieDg */
  UINT8                       PepPcieDg;
  
  /* Enable/disable Low Power constraints Ufs0 */
  UINT8                       PepUfs0;
  
  /* Enable/disable Low Power constraints Ufs1 */
  UINT8                       PepUfs1;
  
  /* N/A */
  UINT8                       Dummy;
  
  /* N/A */
  UINT16                      __reserved;

} PEP_CFG_DATA;


typedef struct {
  
  /* Periodic Scan BIST - E-cores Module 0 */
  UINT8                       FusaPeriodicScanBist0;
  
  /* Periodic Scan BIST - E-cores Module 1 */
  UINT8                       FusaPeriodicScanBist1;
  
  /* Periodic Array BIST - E-cores Module 0 */
  UINT8                       FusaPeriodicArrayBist0;
  
  /* Periodic Array BIST - E-cores Module 1 */
  UINT8                       FusaPeriodicArrayBist1;
  
  /* Fusa Module 0 Lockstep Configuration */
  UINT8                       Module0Lockstep;
  
  /* Fusa Module 1 Lockstep Configuration */
  UINT8                       Module1Lockstep;
  
  /* FuSa Display Parity */
  UINT8                       DisplayFusaConfigEnable;
  
  /* FuSa Graphics Parity */
  UINT8                       GraphicFusaConfigEnable;
  
  /* FuSa OPI Parity */
  UINT8                       OpioFusaConfigEnable;
  
  /* FuSa IOP Parity */
  UINT8                       IopFusaConfigEnable;
  
  /* FuSa PSF Parity */
  UINT8                       PsfFusaConfigEnable;
  
  /* FuSa MC/CMF Parity */
  UINT8                       McParity;
  
  /* FuSa IBECC Parity */
  UINT8                       IbeccParity;
  
  /* Index of GSPI controller to send FuSa diagnostic results. */
  UINT8                       DiagGspiCtrlr;
  
  /* N/A */
  UINT16                      __reserved;

} FUSA_CFG_DATA;


typedef struct {
  
  /* Internal Graphics Pre-allocated Memory */
  UINT8                       IgdDvmt50PreAlloc;
  
  /* Aperture Size */
  UINT8                       ApertureSize;
  
  /* Internal Graphics */
  UINT8                       InternalGfx;
  
  /* Selection of the primary display device */
  UINT8                       PrimaryDisplay;
  
  /* Selection of iGFX GTT Memory size */
  UINT16                      GttSize;
  
  /* N/A */
  UINT16                      Dummy;

} GRAPHICS_CFG_DATA;

#pragma pack()

#endif
