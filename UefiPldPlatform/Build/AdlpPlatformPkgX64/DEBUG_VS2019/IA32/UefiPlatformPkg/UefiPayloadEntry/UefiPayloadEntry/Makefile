#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = AdlpPlatformPkgX64
PLATFORM_GUID = 66CFCF39-4493-411f-B4DE-D8D05CCD2C56
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = PldPlatform\AdlpPlatformPkg
PLATFORM_DIR = e:\code\adl_n100_code\uefipldplatform\PldPlatform\AdlpPlatformPkg
PLATFORM_OUTPUT_DIR = Build\AdlpPlatformPkgX64

#
# Module Macro Definition
#
MODULE_NAME = PayloadEntry
MODULE_GUID = 2119BBD7-9432-4f47-B5E2-5C4EA31B6BDC
MODULE_NAME_GUID = PayloadEntry
MODULE_VERSION = 1.0
MODULE_TYPE = SEC
MODULE_FILE = UefiPayloadEntry.inf
MODULE_FILE_BASE_NAME = UefiPayloadEntry
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = UefiPlatformPkg\UefiPayloadEntry
PACKAGE_RELATIVE_DIR = UefiPayloadEntry
MODULE_DIR = e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry
FFS_OUTPUT_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\FV\Ffs\2119BBD7-9432-4f47-B5E2-5C4EA31B6BDCPayloadEntry

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = PayloadEntry
FILE_GUID = 2119BBD7-9432-4f47-B5E2-5C4EA31B6BDC
MODULE_TYPE = SEC
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = IA32
TOOLCHAIN = VS2019
TOOLCHAIN_TAG = VS2019
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019
BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019
BIN_DIR = $(BUILD_DIR)\IA32
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry
OUTPUT_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT
DEBUG_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
DTCPP = cpp


ASLPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe
ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7


BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB

DEPS_FLAGS = /showIncludes

RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF



ASLCC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe
ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable

ASM_FLAGS = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
ASM = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe


ASMLINK = bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny

DTC_FLAGS = -H epapr
DTC = dtc

PP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe
PP_FLAGS = /nologo /E /TC /FIAutoGen.h


TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

APP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe
APP_FLAGS = /nologo /E /TC

NASMB_FLAGS = -f bin

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08


NASM_FLAGS = -Ox -f win32 -g
NASM = C:\Nasm\nasm


OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for

ASLDLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe
ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE

MAKE = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\nmake.exe

ASL = C:\ASL\iasl.exe
ASL_FLAGS = 
ASL_OUTFLAGS =  -p


CC_FLAGS = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Z7 /Gw /D SLIMBOOTLOADER_ENABLE
CC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe


VFRPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe
VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

ASM16 = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe


LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF


VFR = VfrCompile
VFR_FLAGS = -l -n


OPTROM = EfiRom
OPTROM_FLAGS = -e

RC = C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\rc.exe

DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
DLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe

GENFW = GenFw
GENFW_FLAGS = 

SLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\lib.exe
SLINK_FLAGS = /NOLOGO /LTCG

LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for

DLINK2_FLAGS = /WHOLEARCHIVE



MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\AutoGen.obj \
    $(OUTPUT_DIR)\DxeLoad.obj \
    $(OUTPUT_DIR)\Ia32\DxeLoadFunc.obj \
    $(OUTPUT_DIR)\Ia32\IdtVectorAsm.obj \
    $(OUTPUT_DIR)\Ia32\SecEntry.obj \
    $(OUTPUT_DIR)\X64\VirtualMemory.obj

STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)\AdlpPlatformPkg\Override\PldCommonPkg\Library\PlatformSupportLibSbl\PlatformSupportLibSbl\OUTPUT\PlatformSupportLibSbl.lib \
    $(BIN_DIR)\EmbeddedPkg\Library\PrePiExtractGuidedSectionLib\PrePiExtractGuidedSectionLib\OUTPUT\PrePiExtractGuidedSectionLib.lib \
    $(BIN_DIR)\EmbeddedPkg\Library\PrePiHobLib\PrePiHobLib\OUTPUT\PrePiHobLib.lib \
    $(BIN_DIR)\EmbeddedPkg\Library\PrePiMemoryAllocationLib\PrePiMemoryAllocationLib\OUTPUT\PrePiMemoryAllocationLib.lib \
    $(BIN_DIR)\MdeModulePkg\Library\BaseSerialPortLib16550\BaseSerialPortLib16550\OUTPUT\BaseSerialPortLib16550.lib \
    $(BIN_DIR)\MdePkg\Library\BaseCacheMaintenanceLib\BaseCacheMaintenanceLib\OUTPUT\BaseCacheMaintenanceLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\OUTPUT\BaseDebugLibSerialPort.lib \
    $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\OUTPUT\BaseDebugPrintErrorLevelLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsic\OUTPUT\BaseIoLibIntrinsic.lib \
    $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\OUTPUT\BaseLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseMemoryLibRepStr\BaseMemoryLibRepStr\OUTPUT\BaseMemoryLibRepStr.lib \
    $(BIN_DIR)\MdePkg\Library\BasePcdLibNull\BasePcdLibNull\OUTPUT\BasePcdLibNull.lib \
    $(BIN_DIR)\MdePkg\Library\BasePciExpressLib\BasePciExpressLib\OUTPUT\BasePciExpressLib.lib \
    $(BIN_DIR)\MdePkg\Library\BasePciLibPciExpress\BasePciLibPciExpress\OUTPUT\BasePciLibPciExpress.lib \
    $(BIN_DIR)\MdePkg\Library\BasePeCoffExtraActionLibNull\BasePeCoffExtraActionLibNull\OUTPUT\PeCoffExtraActionLibNull.lib \
    $(BIN_DIR)\MdePkg\Library\BasePeCoffLib\BasePeCoffLib\OUTPUT\BasePeCoffLib.lib \
    $(BIN_DIR)\MdePkg\Library\BasePerformanceLibNull\BasePerformanceLibNull\OUTPUT\BasePerformanceLibNull.lib \
    $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\OUTPUT\BasePrintLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseUefiDecompressLib\BaseUefiDecompressLib\OUTPUT\BaseUefiDecompressLib.lib \
    $(BIN_DIR)\UefiCpuPkg\Library\BaseUefiCpuLib\BaseUefiCpuLib\OUTPUT\BaseUefiCpuLib.lib \
    $(BIN_DIR)\UefiPayloadPkg\Library\AcpiTimerLib\AcpiTimerLib\OUTPUT\AcpiTimerLib.lib \
    $(BIN_DIR)\UefiPayloadPkg\Library\PlatformHookLib\PlatformHookLib\OUTPUT\PlatformHookLib.lib \
    $(BIN_DIR)\UefiPlatformPkg\Library\PrePiHobListPointerLib\PrePiHobListPointerLib\OUTPUT\PrePiHobListPointerLib.lib \
    $(BIN_DIR)\UefiPlatformPkg\Override\EmbeddedPkg\Library\PrePiLib\PrePiLib\OUTPUT\PrePiLib.lib \
    $(BIN_DIR)\UefiPlatformPkg\Override\UefiPayloadPkg\Library\SblParseLib\SblParseLib\OUTPUT\SblParseLib.lib \
    $(OUTPUT_DIR)\PayloadEntry.lib

INC =  \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32 \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\X64 \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\Edk2Open\MdePkg \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Include \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Test\UnitTest\Include \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Include\Ia32 \
    /I$(WORKSPACE)\Edk2Open\MdeModulePkg \
    /I$(WORKSPACE)\Edk2Open\MdeModulePkg\Include \
    /I$(WORKSPACE)\Edk2Open\UefiCpuPkg \
    /I$(WORKSPACE)\Edk2Open\UefiCpuPkg\Include \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\Override\EmbeddedPkg\Include \
    /I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\Override\UefiPayloadPkg\Include \
    /I$(WORKSPACE)\Edk2Open\UefiPayloadPkg \
    /I$(WORKSPACE)\Edk2Open\UefiPayloadPkg\Include \
    /I$(WORKSPACE)\Edk2Open\EmbeddedPkg \
    /I$(WORKSPACE)\Edk2Open\EmbeddedPkg\Include

NASM_INC =  \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\ \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\X64\ \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\ \
    -I$(DEBUG_DIR)\ \
    -I$(WORKSPACE)\Edk2Open\MdePkg\ \
    -I$(WORKSPACE)\Edk2Open\MdePkg\Include\ \
    -I$(WORKSPACE)\Edk2Open\MdePkg\Test\UnitTest\Include\ \
    -I$(WORKSPACE)\Edk2Open\MdePkg\Include\Ia32\ \
    -I$(WORKSPACE)\Edk2Open\MdeModulePkg\ \
    -I$(WORKSPACE)\Edk2Open\MdeModulePkg\Include\ \
    -I$(WORKSPACE)\Edk2Open\UefiCpuPkg\ \
    -I$(WORKSPACE)\Edk2Open\UefiCpuPkg\Include\ \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\ \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\Override\EmbeddedPkg\Include\ \
    -I$(WORKSPACE)\PldPlatform\UefiPlatformPkg\Override\UefiPayloadPkg\Include\ \
    -I$(WORKSPACE)\Edk2Open\UefiPayloadPkg\ \
    -I$(WORKSPACE)\Edk2Open\UefiPayloadPkg\Include\ \
    -I$(WORKSPACE)\Edk2Open\EmbeddedPkg\ \
    -I$(WORKSPACE)\Edk2Open\EmbeddedPkg\Include^\

OBJECT_FILES_LIST = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\object_files.lst
STATIC_LIBRARY_FILES_LIST = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\static_library_files.lst
INC_LIST = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\inc.lst
OBJLIST_0 = $(OUTPUT_DIR)\Ia32\DxeLoadFunc.obj
OBJLIST_1 = $(OUTPUT_DIR)\DxeLoad.obj $(OUTPUT_DIR)\AutoGen.obj
OBJLIST_2 = $(OUTPUT_DIR)\X64\VirtualMemory.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi \
              $(FFS_OUTPUT_DIR)\$(MODULE_GUID).map \
              $(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePcdLibNull\BasePcdLibNull\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibRepStr\BaseMemoryLibRepStr\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsic\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePciExpressLib\BasePciExpressLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePciLibPciExpress\BasePciLibPciExpress\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdeModulePkg\Library\BaseSerialPortLib16550\BaseSerialPortLib16550\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Library\PrePiHobListPointerLib\PrePiHobListPointerLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiHobLib\PrePiHobLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Override\UefiPayloadPkg\Library\SblParseLib\SblParseLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPayloadPkg\Library\PlatformHookLib\PlatformHookLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePeCoffExtraActionLibNull\BasePeCoffExtraActionLibNull\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePerformanceLibNull\BasePerformanceLibNull\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPayloadPkg\Library\AcpiTimerLib\AcpiTimerLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiExtractGuidedSectionLib\PrePiExtractGuidedSectionLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseCacheMaintenanceLib\BaseCacheMaintenanceLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePeCoffLib\BasePeCoffLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseUefiDecompressLib\BaseUefiDecompressLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Override\EmbeddedPkg\Library\PrePiLib\PrePiLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiMemoryAllocationLib\PrePiMemoryAllocationLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdlpPlatformPkg\Override\PldCommonPkg\Library\PlatformSupportLibSbl\PlatformSupportLibSbl\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiCpuPkg\Library\BaseUefiCpuLib\BaseUefiCpuLib\Makefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\DxeLoadFunc.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\DxeLoadFunc.c

$(OBJLIST_1):  \
	$(MAKE_FILE) \
	$(DEBUG_DIR)\AutoGen.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\DxeLoad.c
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\.\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\DEBUG\AutoGen.c e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\DxeLoad.c

$(OBJLIST_2):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\X64\VirtualMemory.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\X64\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\X64\VirtualMemory.c

$(OUTPUT_DIR)\PayloadEntry.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\PayloadEntry.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.lib @$(OBJECT_FILES_LIST)

$(DEBUG_DIR)\PayloadEntry.dll : $(MAKE_FILE)
$(DEBUG_DIR)\PayloadEntry.dll : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)\PayloadEntry.dll : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\DEBUG\PayloadEntry.dll $(DLINK_FLAGS) $(DLINK2_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\DEBUG\PayloadEntry.dll $(DLINK_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)

$(OUTPUT_DIR)\PayloadEntry.efi : $(DEBUG_DIR)\PayloadEntry.dll
	"$(GENFW)" -e $(MODULE_TYPE) -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\DEBUG\PayloadEntry.dll $(GENFW_FLAGS)
	$(CP) e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi $(DEBUG_DIR)
	$(CP) e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi $(BIN_DIR)\$(MODULE_NAME_GUID).efi
	-$(CP) $(DEBUG_DIR)\*.map $(OUTPUT_DIR)
	-$(CP) $(DEBUG_DIR)\*.pdb $(OUTPUT_DIR)

$(OUTPUT_DIR)\Ia32\IdtVectorAsm.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\IdtVectorAsm.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\IdtVectorAsm.obj : $(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\IdtVectorAsm.nasm
	Trim --asm-file -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.i -i $(INC_LIST) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\IdtVectorAsm.nasm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\IdtVectorAsm.nasm > e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.ii
	Trim --trim-long --source-code -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.iii e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.ii
	"$(NASM)" -Ie:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\ $(NASM_INC) $(NASM_FLAGS) -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.obj e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\IdtVectorAsm.iii

$(OUTPUT_DIR)\Ia32\SecEntry.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\SecEntry.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\SecEntry.obj : $(WORKSPACE)\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\SecEntry.nasm
	Trim --asm-file -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.i -i $(INC_LIST) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\SecEntry.nasm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\SecEntry.nasm > e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.ii
	Trim --trim-long --source-code -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.iii e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.ii
	"$(NASM)" -Ie:\code\adl_n100_code\uefipldplatform\PldPlatform\UefiPlatformPkg\UefiPayloadEntry\Ia32\ $(NASM_INC) $(NASM_FLAGS) -o e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.obj e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\Ia32\SecEntry.iii

$(FFS_OUTPUT_DIR)\$(MODULE_GUID).map : E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.map
	if exist E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.map $(CP) E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.map $(FFS_OUTPUT_DIR)\$(MODULE_GUID).map
$(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs : $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.pe32
	GenFfs -t EFI_FV_FILETYPE_SECURITY_CORE -g $(MODULE_GUID) -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.pe32 -n 32
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.pe32 : E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi
	if exist E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi GenSec -s EFI_SECTION_PE32 -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.pe32 E:\Code\ADL_N100_Code\UefiPldPlatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\IA32\UefiPlatformPkg\UefiPayloadEntry\UefiPayloadEntry\OUTPUT\PayloadEntry.efi


#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePcdLibNull\BasePcdLibNull\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePcdLibNull\BasePcdLibNull\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseMemoryLibRepStr\BaseMemoryLibRepStr\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibRepStr\BaseMemoryLibRepStr\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsic\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsic\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePciExpressLib\BasePciExpressLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePciExpressLib\BasePciExpressLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePciLibPciExpress\BasePciLibPciExpress\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePciLibPciExpress\BasePciLibPciExpress\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdeModulePkg\Library\BaseSerialPortLib16550\BaseSerialPortLib16550\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdeModulePkg\Library\BaseSerialPortLib16550\BaseSerialPortLib16550\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiPlatformPkg\Library\PrePiHobListPointerLib\PrePiHobListPointerLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Library\PrePiHobListPointerLib\PrePiHobListPointerLib\Makefile cleanall
	-@if exist $(BIN_DIR)\EmbeddedPkg\Library\PrePiHobLib\PrePiHobLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiHobLib\PrePiHobLib\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiPlatformPkg\Override\UefiPayloadPkg\Library\SblParseLib\SblParseLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Override\UefiPayloadPkg\Library\SblParseLib\SblParseLib\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiPayloadPkg\Library\PlatformHookLib\PlatformHookLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPayloadPkg\Library\PlatformHookLib\PlatformHookLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePeCoffExtraActionLibNull\BasePeCoffExtraActionLibNull\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePeCoffExtraActionLibNull\BasePeCoffExtraActionLibNull\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePerformanceLibNull\BasePerformanceLibNull\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePerformanceLibNull\BasePerformanceLibNull\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiPayloadPkg\Library\AcpiTimerLib\AcpiTimerLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPayloadPkg\Library\AcpiTimerLib\AcpiTimerLib\Makefile cleanall
	-@if exist $(BIN_DIR)\EmbeddedPkg\Library\PrePiExtractGuidedSectionLib\PrePiExtractGuidedSectionLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiExtractGuidedSectionLib\PrePiExtractGuidedSectionLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseCacheMaintenanceLib\BaseCacheMaintenanceLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseCacheMaintenanceLib\BaseCacheMaintenanceLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePeCoffLib\BasePeCoffLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePeCoffLib\BasePeCoffLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseUefiDecompressLib\BaseUefiDecompressLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseUefiDecompressLib\BaseUefiDecompressLib\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiPlatformPkg\Override\EmbeddedPkg\Library\PrePiLib\PrePiLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiPlatformPkg\Override\EmbeddedPkg\Library\PrePiLib\PrePiLib\Makefile cleanall
	-@if exist $(BIN_DIR)\EmbeddedPkg\Library\PrePiMemoryAllocationLib\PrePiMemoryAllocationLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\EmbeddedPkg\Library\PrePiMemoryAllocationLib\PrePiMemoryAllocationLib\Makefile cleanall
	-@if exist $(BIN_DIR)\AdlpPlatformPkg\Override\PldCommonPkg\Library\PlatformSupportLibSbl\PlatformSupportLibSbl\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdlpPlatformPkg\Override\PldCommonPkg\Library\PlatformSupportLibSbl\PlatformSupportLibSbl\Makefile cleanall
	-@if exist $(BIN_DIR)\UefiCpuPkg\Library\BaseUefiCpuLib\BaseUefiCpuLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\UefiCpuPkg\Library\BaseUefiCpuLib\BaseUefiCpuLib\Makefile cleanall
	@cd $(MODULE_BUILD_DIR)

