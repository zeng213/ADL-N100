#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = AdlpPlatformPkgX64
PLATFORM_GUID = 66CFCF39-4493-411f-B4DE-D8D05CCD2C56
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = PldPlatform\AdlpPlatformPkg
PLATFORM_DIR = e:\code\adl_n100_code\uefipldplatform\PldPlatform\AdlpPlatformPkg
PLATFORM_OUTPUT_DIR = Build\AdlpPlatformPkgX64

#
# Module Macro Definition
#
MODULE_NAME = BaseCryptLib
MODULE_GUID = be3bb803-91b6-4da0-bd91-a8b21c18ca5d
MODULE_NAME_GUID = BaseCryptLib
MODULE_VERSION = 1.0
MODULE_TYPE = DXE_DRIVER
MODULE_FILE = BaseCryptLib.inf
MODULE_FILE_BASE_NAME = BaseCryptLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = CryptoPkg\Library\BaseCryptLib
PACKAGE_RELATIVE_DIR = Library\BaseCryptLib
MODULE_DIR = e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib
FFS_OUTPUT_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\FV\Ffs\be3bb803-91b6-4da0-bd91-a8b21c18ca5dBaseCryptLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = BaseCryptLib
MODULE_UNI_FILE = BaseCryptLib.uni
FILE_GUID = be3bb803-91b6-4da0-bd91-a8b21c18ca5d
MODULE_TYPE = DXE_DRIVER
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = VS2019
TOOLCHAIN_TAG = VS2019
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019
BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019
BIN_DIR = $(BUILD_DIR)\X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib
OUTPUT_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT
DEBUG_DIR = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

MAKE = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\nmake.exe



RC = C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\rc.exe

DEPS_FLAGS = /showIncludes

VFRPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe
VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h




VFR = VfrCompile
VFR_FLAGS = -l -n

ASL = C:\ASL\iasl.exe
ASL_FLAGS = 
ASL_OUTFLAGS =  -p

RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF

APP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe
APP_FLAGS = /nologo /E /TC






NASM_FLAGS = -Ox -f win64 -g
NASM = C:\Nasm\nasm

ASLPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe
ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h


ASM16 = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe

DLINK2_FLAGS = /WHOLEARCHIVE

SLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\lib.exe
SLINK_FLAGS = /NOLOGO /LTCG

PP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe
PP_FLAGS = /nologo /E /TC /FIAutoGen.h

DTC_FLAGS = -H epapr
DTC = dtc

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for

DTCPP = cpp

ASLDLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\link.exe
ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE


ASMLINK = bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny

CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Z7 /Gw /wd4090 /D SLIMBOOTLOADER_ENABLE
CC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe

ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd /Zi
ASM = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\ml64.exe

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for


BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB

LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889


OPTROM = EfiRom
OPTROM_FLAGS = -e

GENFW = GenFw
GENFW_FLAGS = 

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4281 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
DLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\link.exe

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

NASMB_FLAGS = -f bin

ASLCC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\cl.exe
ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable


MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\Cipher\CryptAes.obj \
    $(OUTPUT_DIR)\Hash\CryptMd5.obj \
    $(OUTPUT_DIR)\Hash\CryptSha1.obj \
    $(OUTPUT_DIR)\Hash\CryptSha256.obj \
    $(OUTPUT_DIR)\Hash\CryptSha512.obj \
    $(OUTPUT_DIR)\Hash\CryptSm3.obj \
    $(OUTPUT_DIR)\Hmac\CryptHmacSha256.obj \
    $(OUTPUT_DIR)\Kdf\CryptHkdf.obj \
    $(OUTPUT_DIR)\Pem\CryptPem.obj \
    $(OUTPUT_DIR)\Pk\CryptAuthenticode.obj \
    $(OUTPUT_DIR)\Pk\CryptDh.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs1Oaep.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs5Pbkdf2.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs7Sign.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyBase.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyCommon.obj \
    $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyEku.obj \
    $(OUTPUT_DIR)\Pk\CryptRsaBasic.obj \
    $(OUTPUT_DIR)\Pk\CryptRsaExt.obj \
    $(OUTPUT_DIR)\Pk\CryptTs.obj \
    $(OUTPUT_DIR)\Pk\CryptX509.obj \
    $(OUTPUT_DIR)\Rand\CryptRandTsc.obj \
    $(OUTPUT_DIR)\SysCall\BaseMemAllocation.obj \
    $(OUTPUT_DIR)\SysCall\CrtWrapper.obj \
    $(OUTPUT_DIR)\SysCall\TimerWrapper.obj \
    $(OUTPUT_DIR)\SysCall\inet_pton.obj

INC =  \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Rand \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pem \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Cipher \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Kdf \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hmac \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\Edk2Open\MdePkg \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Include \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Test\UnitTest\Include \
    /I$(WORKSPACE)\Edk2Open\MdePkg\Include\X64 \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Include \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Private \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\Include \
    /I$(WORKSPACE)\Edk2Open\CryptoPkg\Library\OpensslLib\openssl\include

OBJECT_FILES_LIST = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\object_files.lst
OBJLIST_0 = $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyEku.obj $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyCommon.obj $(OUTPUT_DIR)\Pk\CryptPkcs7Sign.obj $(OUTPUT_DIR)\Pk\CryptAuthenticode.obj $(OUTPUT_DIR)\Pk\CryptPkcs5Pbkdf2.obj $(OUTPUT_DIR)\Pk\CryptDh.obj $(OUTPUT_DIR)\Pk\CryptRsaExt.obj $(OUTPUT_DIR)\Pk\CryptTs.obj $(OUTPUT_DIR)\Pk\CryptPkcs1Oaep.obj $(OUTPUT_DIR)\Pk\CryptRsaBasic.obj $(OUTPUT_DIR)\Pk\CryptX509.obj $(OUTPUT_DIR)\Pk\CryptPkcs7VerifyBase.obj
OBJLIST_1 = $(OUTPUT_DIR)\Hash\CryptSha512.obj $(OUTPUT_DIR)\Hash\CryptSm3.obj $(OUTPUT_DIR)\Hash\CryptMd5.obj $(OUTPUT_DIR)\Hash\CryptSha1.obj $(OUTPUT_DIR)\Hash\CryptSha256.obj
OBJLIST_2 = $(OUTPUT_DIR)\Hmac\CryptHmacSha256.obj
OBJLIST_3 = $(OUTPUT_DIR)\Cipher\CryptAes.obj
OBJLIST_4 = $(OUTPUT_DIR)\SysCall\TimerWrapper.obj $(OUTPUT_DIR)\SysCall\BaseMemAllocation.obj $(OUTPUT_DIR)\SysCall\inet_pton.obj $(OUTPUT_DIR)\SysCall\CrtWrapper.obj
OBJLIST_5 = $(OUTPUT_DIR)\Kdf\CryptHkdf.obj
OBJLIST_6 = $(OUTPUT_DIR)\Pem\CryptPem.obj
OBJLIST_7 = $(OUTPUT_DIR)\Rand\CryptRandTsc.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\BaseCryptLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OBJLIST_2):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hmac\CryptHmacSha256.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Hmac\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hmac\CryptHmacSha256.c

$(OBJLIST_3):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Cipher\CryptAes.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Cipher\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Cipher\CryptAes.c

$(OBJLIST_1):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha256.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptMd5.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSm3.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha512.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha1.c
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Hash\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha256.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptMd5.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSm3.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha512.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Hash\CryptSha1.c

$(OBJLIST_4):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\BaseMemAllocation.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\inet_pton.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\CrtWrapper.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\TimerWrapper.c
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\SysCall\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\BaseMemAllocation.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\inet_pton.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\CrtWrapper.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\SysCall\TimerWrapper.c

$(OBJLIST_5):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Kdf\CryptHkdf.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Kdf\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Kdf\CryptHkdf.c

$(OBJLIST_6):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pem\CryptPem.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Pem\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pem\CryptPem.c

$(OBJLIST_7):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Rand\CryptRandTsc.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Rand\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Rand\CryptRandTsc.c

$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs1Oaep.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs5Pbkdf2.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptX509.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptTs.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyBase.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyEku.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7Sign.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptRsaBasic.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyCommon.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptRsaExt.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptDh.c \
	$(WORKSPACE)\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptAuthenticode.c
	"$(CC)" /Foe:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\Pk\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs1Oaep.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs5Pbkdf2.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptX509.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptTs.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyBase.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyEku.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7Sign.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptRsaBasic.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptPkcs7VerifyCommon.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptRsaExt.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptDh.c e:\code\adl_n100_code\uefipldplatform\Edk2Open\CryptoPkg\Library\BaseCryptLib\Pk\CryptAuthenticode.c

$(OUTPUT_DIR)\BaseCryptLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\BaseCryptLib.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:e:\code\adl_n100_code\uefipldplatform\Build\AdlpPlatformPkgX64\DEBUG_VS2019\X64\CryptoPkg\Library\BaseCryptLib\BaseCryptLib\OUTPUT\BaseCryptLib.lib @$(OBJECT_FILES_LIST)



#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

